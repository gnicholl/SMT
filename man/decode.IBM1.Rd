% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decode_IBM1.R
\name{decode.IBM1}
\alias{decode.IBM1}
\title{(IBM1) Compute translation probabilities given a foreign sentence.}
\usage{
\method{decode}{IBM1}(
  object,
  fsentence,
  threshold = 0.001,
  maxlength = length(unlist(stringr::str_split(fsentence, pattern = " ")))
)
}
\arguments{
\item{object}{result from IBM1()}

\item{fsentence}{sentence in f language you'd like to translate to e language (vector or space-delimited string)}

\item{threshold}{reduce the number of e language words to consider by eliminating ones with Prob<=threshold (default=0.001).}

\item{maxlength}{only consider e translations which have maxlength words or fewer. By default, will look for translations with the same number of words (or fewer) as fsentence.}
}
\value{
A data.frame with two columns, sorted in descending order of pr:
\item{esentence}{Possible translation of fsentence.}
\item{pr}{Translation probability (up to a constant).}
}
\description{
Takes a sentence in a foreign language f and produces a list of possible translations
in language e and their respective probabilities based on the IBM1 model. Only returns
translations with probabilities > 0. Currently works by considering all combinations (order doesn't matter)
of most likely (based on threshold parameter) words from language e. Thus, caution
should be taken in predicting very long sentences from language f.
}
\examples{
# download english-french sentence pairs
temp = tempfile()
download.file("http://www.manythings.org/anki/fra-eng.zip",temp);
ENFR = readr::read_tsv(file=unz(temp,"fra.txt"),col_names=c("en","fr","details"));
unlink(temp);

# a bit of pre-processing
e = tolower(stringr::str_squish(tm::removePunctuation(ENFR$en[1:200])));
f = tolower(stringr::str_squish(tm::removePunctuation(ENFR$fr[1:200])));

# estimate model
out = IBM1(e,f,maxiter=50,eps=0.01);

# possible english translations and their probabilities
decode(out, fsentence="une bière sil vous plaît")
}
