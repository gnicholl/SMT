% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IBM1.R
\name{IBM1}
\alias{IBM1}
\title{IBM1 Model}
\usage{
IBM1(e, f, maxiter = 30, eps = 0.01, sparse = FALSE, fmatch = FALSE, cl = NULL)
}
\arguments{
\item{e}{vector of sentences in language we want to translate to}

\item{f}{vector of sentences in language we want to translate from}

\item{maxiter}{max number of EM iterations allowed}

\item{eps}{convergence criteria for perplexity}

\item{sparse}{If FALSE (default), use base R matrices. If TRUE, use sparseMatrix from the Matrix package.}

\item{fmatch}{If TRUE, use fmatch from fastmatch package for faster lookup. Otherwise use base R lookup.}
}
\value{
\item{tmatrix}{Matrix of translation probabilities (cols are words from e, rows are words from f). If sparse=TRUE, tmatrix will be a sparseMatrix from the Matrix package, and will generally take up substantially less memory.}
\item{numiter}{Number of iterations}
\item{maxiter}{As above}
\item{eps}{As above}
\item{converged}{TRUE if algorithm stopped once eps criteria met. FALSE otherwise.}
\item{perplexity}{Final likelihood/perplexity value.}
\item{time_elapsed}{Time in minutes the algorithm ran for.}
}
\description{
The simplest SMT model from Brown et al. (1993)
}
\examples{
# download english-french sentence pairs
temp = tempfile()
download.file("http://www.manythings.org/anki/fra-eng.zip",temp);
ENFR = readr::read_tsv(file=unz(temp,"fra.txt"),col_names=c("en","fr","details"));
unlink(temp);

# a bit of pre-processing
e = tolower(stringr::str_squish(tm::removePunctuation(ENFR$en[1:200])));
f = tolower(stringr::str_squish(tm::removePunctuation(ENFR$fr[1:200])));

# try with and without sparseMatrix (slow match)
test1 = SMT::IBM1(e,f,maxiter=200,eps=0.01,sparse=FALSE,fmatch=FALSE);
test2 = SMT::IBM1(e,f,maxiter=200,eps=0.01,sparse=TRUE,fmatch=FALSE);

# try with and without sparseMatrix (fast match)
test3 = SMT::IBM1(e,f,maxiter=200,eps=0.01,sparse=FALSE,fmatch=TRUE);
test4 = SMT::IBM1(e,f,maxiter=200,eps=0.01,sparse=TRUE,fmatch=TRUE);
}
